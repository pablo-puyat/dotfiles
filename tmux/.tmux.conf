unbind C-a
unbind C-b
set -g prefix C-a
bind C-a send-prefix
bind | split-window -h
bind - split-window -v
set-option -sa terminal-overrides ',xterm-256color:RGB'
set-option -g focus-events on
set -g base-index 1
setw -g pane-base-index 1

set -g mouse on 
set-option -g default-terminal "screen-256color"

set-window-option -g automatic-rename on
set-option -g set-titles on

set -g status-keys vi
set -g history-limit 10000

setw -g mode-keys vi
setw -g monitor-activity on

# Shift arrow to switch windows
bind-key -n S-Left  previous-window
bind-key -n S-Right next-window

# No delay for escape key press
set -sg escape-time 0

# Reload tmux config
bind r source-file ~/.tmux.conf

# NOTE: you can use vars with $<var> and ${<var>} as long as the str is double quoted: ""
# WARNING: hex colors can't contain capital letters

# --> Catppuccin
thm_bg="#1e1e28"
thm_fg="#d7dae0"
thm_cyan="#c2e7f0"
thm_black="#15121c"
thm_gray="#2d293b"
thm_magenta="#c6aae8"
thm_pink="#f0afe1"
thm_red="#e28c8c"
thm_green="#b3e1a3"
thm_yellow="#eadda0"
thm_blue="#a4b9ef"
thm_orange="#f7c196"
catppuccin12="#3e4058"

# ----------------------------=== Theme ===--------------------------

# status
set -g status-position "bottom"
set -g status "on"
set -g status-bg "${thm_bg}"
set -g status-justify "centre"
set -g status-left-length "100"
set -g status-right-length "100"

# messages
set -g message-style fg="${thm_cyan}",bg="${thm_gray}",align="centre"
set -g message-command-style fg="${thm_cyan}",bg="${thm_gray}",align="centre"

# panes
set -g pane-border-style fg="${thm_gray}"
set -g pane-active-border-style fg="${thm_blue}"

# windows
setw -g window-status-activity-style fg="${thm_fg}",bg="${thm_bg}",none
setw -g window-status-separator ""
setw -g window-status-style fg="${thm_fg}",bg="${thm_bg}",none

# --------=== Statusline

set -g status-left " #[fg=blue]#S "
set -g status-right ""

setw -g window-status-format " #[fg=$thm_bg,bg=$thm_blue] #I #[fg=$thm_fg,bg=$thm_gray] #W "
setw -g window-status-current-format " #[fg=$thm_bg,bg=$thm_green] #{?window_zoomed_flag,#[fg=yellow],}#I #[fg=$thm_fg,bg=$thm_bg] #W "
# setw -g window-status-current-format '#{?window_zoomed_flag,#[fg=yellow],}#F#I [#W] '

# --------=== Modes
setw -g clock-mode-colour "${thm_blue}"
setw -g mode-style "fg=${thm_pink} bg=${catppuccin12} bold"

# --------=== tmux / neovim navigation
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }
bind-key -n 'M-h' 'resize-pane -L 1'
bind-key -n 'M-j' 'resize-pane -U 1'
bind-key -n 'M-k' 'resize-pane -D 1'
bind-key -n 'M-l' 'resize-pane -R 1'
bind-key -n 'M-z' 'resize-pane -Z'
bind-key -n 'M-1' 'select-window -t :1'
bind-key -n 'M-2' 'select-window -t :2'
bind-key -n 'M-3' 'select-window -t :3'
bind-key -n 'M-4' 'select-window -t :4'
bind-key -n 'M-5' 'select-window -t :5'
bind-key -n 'M-0' 'next-window'
bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'

# Undercurl
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0
